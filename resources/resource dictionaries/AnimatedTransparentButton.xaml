<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- Animated Transparent Button -->
    <Style x:Key="AnimatedTransparentButton" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1" ScaleY="1"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Effect" Value="{x:Null}"/>

        <!-- Custom Template with only content -->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <ContentPresenter
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        RecognizesAccessKey="True"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>

            <!-- MouseOver: slight scale up + soft shadow -->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="RenderTransform">
                    <Setter.Value>
                        <ScaleTransform ScaleX="1.05" ScaleY="1.05"/>
                    </Setter.Value>
                </Setter>
                <Setter Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect Color="Black" BlurRadius="5" ShadowDepth="2" Opacity="0.2"/>
                    </Setter.Value>
                </Setter>
            </Trigger>

            <!-- Pressed Animation: scale down -->
            <Trigger Property="IsPressed" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard x:Name="ButtonPressedStoryboard">
                            <!-- Scale down on click -->
                            <DoubleAnimation To="0.9" Duration="0:0:0.08" AutoReverse="True"
                                             Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" />
                            <DoubleAnimation To="0.9" Duration="0:0:0.08" AutoReverse="True"
                                             Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
            </Trigger>

            <!-- Disabled State: Reset scale after animation ends -->
            <Trigger Property="IsEnabled" Value="False">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <!-- Reset the scale when the button is disabled -->
                            <DoubleAnimation To="1" Duration="0:0:0"
                                             Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" />
                            <DoubleAnimation To="1" Duration="0:0:0"
                                             Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Setter Property="Foreground" Value="Gray"/>
                <Setter Property="Opacity" Value="0.5"/>
            </Trigger>

        </Style.Triggers>
    </Style>

</ResourceDictionary>